---
Source File Name: 40-Logging.docx
AssetID: b45ee518-82b1-426c-b772-1e6c0fde455e
Title: Trace Listener Properties
Order In ToC: 1-4-1-2-2-1
Output Filename: 1-4-1-2-2-1_Trace Listener Properties.markdown
---

#### Markdown Test ####
# Trace Listener Properties #
----------

<a name="props_tracelistener" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>These tables explain the properties for the different trace listeners. There are tables for the following trace listeners:  
+ <a href="#trace_database" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">Database Trace Listener</a>. This trace listener writes formatted log entries to a database.
+ <a href="#trace_email" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">E-mail Trace Listener</a>. This trace listener sends log entries as e-mail messages.
+ <a href="#trace_eventlog" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">Event Log Trace Listener</a>. This trace listener formats log entries and writes them to Windows Event Log.
+ <a href="#trace_flatfile" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">Flat File Trace Listener</a>. This trace listener writes log entries to a text file.
+ <a href="#trace_msmq" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">Message Queuing Trace Listener</a>. This trace listener writes log entries to a message queue.
+ <a href="#trace_rolling" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">Rolling Flat File Trace Listener</a>. This trace listener creates a new log file depending on the current log file age and/or size.
+ <a href="#trace_system" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">System Diagnostics Trace Listener</a>. This is one of the .NET Framework trace listeners such as the Console Trace Listener.
+ <a href="#trace_xml" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">XML Trace Listener</a>. This trace listener is used to output log messages to an XML formatted file. 
<a name="trace_database" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064956" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Database Trace Listener #
The following table lists the properties that you can set when you add a **Database Trace Listener**.  
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th><p>Description</p></th></tr><tr><td><p><b>Add Category Procedure</b></p></td><td><p>The name of the stored procedure that adds a category. The default is <b>AddCategory</b>. This is required.</p></td></tr><tr><td><p><b>Database Instance</b></p></td><td><p>The name of the database instance to use as configured in the Data Settings section of the configuration. This is required.</p></td></tr><tr><td><p><b>Severity Filter</b></p></td><td><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Formatter</b></p></td><td><p>The formatter to use with this trace listener. Select one from the drop-down list. The default is none. This is optional.</p></td></tr><tr><td><p><b>Name</b></p></td><td><p>The name of the trace listener. The default is <b>Database Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td><p>A property used by trace listeners that do not output to a text formatter to determine which options, or elements, should be included in the trace output. Possible values are <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and <b>Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Write To Log Procedure</b></p></td><td><p>The name of the stored procedure that writes the log entries. The default is <b>WriteLog</b>. This is required.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table><a name="trace_email" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064957" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Email Trace Listener #
The following table lists the properties that you can set when you add an e-mail trace listener.   
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th><p>Description</p></th></tr><tr><td><p><b>Authentication Mode</b></p></td><td><p>A value from the <b>EmailAuthenticationMode</b> enumeration that specifies how the listener will authenticate the user. Valid values are <b>None</b>, <b>WindowsCredentials</b>, and <b>UserNameAndPassword.</b></p></td></tr><tr><td><p><b>Severity Filter</b></p></td><td><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Formatter Name</b></p></td><td><p>The formatter to use with this trace listener. Select one from the drop-down list. The default is none. This is optional.</p></td></tr><tr><td><p><b>From Address</b></p></td><td><p>The address where the log entry originated. The default is from@example.com. This is required.</p></td></tr><tr><td><p><b>Name</b></p></td><td><p>The name of the trace listener. The default is <b>Email Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>Authentication Password</b></p></td><td><p>Password when authenticating with user name and password.</p></td></tr><tr><td><p><b>Smtp Port</b></p></td><td><p>The SMTP port that receives e-mail messages. The default is <b>25</b>. This is optional. </p></td></tr><tr><td><p><b>Smtp Server</b></p></td><td><p>The SMTP server used to send e-mail messages. The default is <b>127.0.0.1</b>. This is optional.</p></td></tr><tr><td><p><b>Subject Line Suffix</b></p></td><td><p>The subject line suffix. This is optional.</p></td></tr><tr><td><p><b>Subject Line Prefix</b></p></td><td><p>The subject line prefix. This is optional.</p></td></tr><tr><td><p><b>To Address</b></p></td><td><p>The address where the log entry is sent. The default is to@example.com. This is required.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td><p>Trace listeners that do not output to a text formatter use this property to determine which options, or elements, should be included in the trace output. Possible values are: <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and<b> Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Authentication User Name</b></p></td><td><p>User name when authenticating with user name and password.</p></td></tr><tr><td><p><b>Use SSL</b></p></td><td><p>Specifies if the e-mail trace listener should use SSL when connecting to the mail server. Set to <b>True</b> to use SSL to connect, or <b>False</b> to use an unencrypted connection. The default is <b>False.</b></p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table>
<div class="alert" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" src="../local/note.gif" />Note:</th></tr><tr><td>The configuration files are not encrypted by default. A configuration file may contain sensitive information about connection strings, user IDs, passwords, database servers, and catalogs. You should protect this information against unauthorized read/write operations by using encryption techniques. For information about how to encrypt configuration files, see <a href="test-markdown_f48f5196-4e77-461b-b700-5fa6daf41d35.html">Encrypting Configuration Data</a> and <a href="test-markdown_05ae7aff-85e4-46b5-8401-c4df81a2ea00.html">Configuring Enterprise Library</a>.

In addition to this problem, e-mail messages exchanged with a SMTP server could be intercepted while in transit by a malicious user running a network sniffer or monitoring application. You can mitigate this problem by supporting Transport Layer Security or S/Mime with encryption of the e-mail messages.</td></tr></table><p /></div>
<a name="_Flat_File_Trace" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="trace_flatfile" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064958" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Flat File Trace Listener #
The following table lists the properties that you can set when you add a flat file trace listener.  
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th><p>Description</p></th></tr><tr><td><p><b>File Name</b></p></td><td><p>The name of the file where entries are written. The default name is <b>trace.log</b>. This is a required value. It can include environment variables such as %WINDIR%, %TEMP%, and %USERPROFILE%.</p></td></tr><tr><td><p><b>Severity Filter</b></p></td><td><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Message Footer</b></p></td><td><p>Additional information contained in the file footer. The default is "----------------------------------------." This is optional.</p></td></tr><tr><td><p><b>Formatter Name</b></p></td><td><p>The formatter to use with this trace listener. Select one from the drop-down list. The default is none. This is optional.</p></td></tr><tr><td><p><b>Message Header</b></p></td><td><p>Additional information contained in the file header. The default is "----------------------------------------." This is optional.</p></td></tr><tr><td><p><b>Name</b></p></td><td><p>The name of the trace listener. The default is<b> FlatFile Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td><p>Trace listeners that do not output to a text formatter use this property to determine which options, or elements, should be included in the trace output. Possible values are: <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and<b> Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table>
<div class="alert" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" src="../local/note.gif" />Note:</th></tr><tr><td>If the file you specify for the **Flat File** **TraceListener** is read-only, the trace listener does not write the data to the file and no exception occurs. Make sure that the file attributes are set to **read/write**.

When you use the **FlatFileTraceListener** class to write log information to a file, the block locks the file until the application closes. It is possible to open and read the file, but you cannot move or delete the log file until you close the application.</td></tr></table><p /></div>
<a name="trace_eventlog" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064959" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Event Log Trace Listener #
The following table lists the properties that you can set when you add an **event log trace listener**.  
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th><p>Description</p></th></tr><tr><td><p><b>Severity Filter</b></p></td><td><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Formatter Name</b></p></td><td><p>The formatter to use with this trace listener. Select one from the drop-down list. The default is<b> </b>none. This is optional.</p></td></tr><tr><td><p><b>Log Name</b></p></td><td><p>The name of the event log where entries are written. The default is <b>Application</b>. This is optional.</p></td></tr><tr><td><p><b>Machine Name</b></p></td><td><p>The name of the computer on which to write log entries. This is optional.</p></td></tr><tr><td><p><b>Name</b></p></td><td><p>The name of the trace listener. The default is <b>Event Log Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>Source Name</b></p></td><td><p>The source name to use when writing to the log. The default is Enterprise Library Logging. This is required.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td><p>Trace listeners that do not output to a text formatter use this property to determine which options, or elements, should be included in the trace output. Possible values are: <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and<b> Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table><a name="trace_msmq" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064960" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Message Queuing Trace Listener #
The following table lists the properties that you can set when you add a **Message Queuing (MSMQ) Trace Listener**.  
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th><p>Description</p></th></tr><tr><td><p><b>Severity Filter</b></p></td><td><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Formatter Name</b></p></td><td><p>The formatter to use with this trace listener. Select one from the drop-down list. This must be the binary formatter when you use this listener with the message queuing distributor service. This is optional.</p></td></tr><tr><td><p><b>Message Priority</b></p></td><td><p>Sets the priority of a log entry. This determines its priority while the log entry is in transit and when it is inserted into its destination queue. Possible values are <b>AboveNormal</b>, <b>High</b>, <b>Highest</b>, <b>Low</b>, <b>Lowest</b>, <b>Normal</b>, <b>VeryHigh</b>, and <b>VeryLow</b>. It applies to the <b>MsmqTraceListener</b> class. The default is <b>Normal</b>. This is optional.</p></td></tr><tr><td><p><b>Name</b></p></td><td><p>The name of the trace listener. The default is <b>Message Queuing Trace Listener</b>.</p></td></tr><tr><td><p><b>Queue Path</b></p></td><td><p>The path to the queue that the <b>Msmq TraceListener</b> instance uses. This attribute is a message queuing path, and it applies to the <b>MsmqTraceListener</b> class. The default is <b>.\Private$\myQueue</b>. This is required.</p></td></tr><tr><td><p><b>Recoverable</b></p></td><td><p>Specifies whether the log entry is guaranteed to be delivered if there is a computer failure or network problem. The default is <b>False</b>. This is optional.</p></td></tr><tr><td><p><b>Time To Be Received</b></p></td><td><p>The total time for a log entry to be received by the destination queue. The default is <b>49710.06:28:15</b>. This is optional.</p></td></tr><tr><td><p><b>Time To Reach Queue</b></p></td><td><p>The maximum time for the log entry to reach the queue. The default is <b>49710.06:28:15</b>. This is optional.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td><p>Attaches additional information to platform-provided trace listener output for listeners that do not output to a text formatter. Possible values are <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and <b>Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Transaction Type</b></p></td><td><p>The type of a Message Queuing transaction. Possible values are <b>Automatic</b>, <b>None</b>, and <b>Single</b>. It applies to the <b>MsmqTraceListener</b> class. The default is <b>None</b>. This is optional.</p></td></tr><tr><td><p><b>Use Authentication</b></p></td><td><p>Specifies whether the message was (or must be) authenticated before being sent. The default is <b>False</b>. This is optional. </p></td></tr><tr><td><p><b>Use Dead Letter Queue</b></p></td><td><p>Specifies whether a copy of a message that could not be delivered should be sent to a dead-letter queue. The default is <b>False</b>. This is optional.</p></td></tr><tr><td><p><b>Use Encryption</b></p></td><td><p>Specifies whether to make the message private. The default is <b>False</b>. This is optional.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table><a name="Rolling_Flat_File_Trace" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064961" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="trace_rolling" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Rolling Flat File Trace Listener #
The following table lists the properties that you can set when you add a rolling flat file trace listener. This trace listener allows you to control the size and age of a log file.   
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th colspan="2"><p>Description</p></th></tr><tr><td><p><b>File Name</b></p></td><td colspan="2"><p>This is the name of the rolling flat file. This is a required value. It can include environment variables such as %WINDIR%, %TEMP%, and %USERPROFILE%. If you also set the <b>Max Archived Files</b> property, See the advice on choosing a file name in the following <b>Remarks</b> section.</p></td></tr><tr><td><p><b>Severity Filter</b></p></td><td colspan="2"><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Message Footer</b></p></td><td colspan="2"><p>Additional information contained in the file footer. The default is "----------------------------------------." This is optional.</p></td></tr><tr><td><p><b>Formatter Name</b></p></td><td colspan="2"><p>The formatter to use with this trace listener. Select one from the drop-down list. The default is none. This is optional.</p></td></tr><tr><td><p><b>Message Header</b></p></td><td colspan="2"><p>Additional information contained in the file header. The default is "----------------------------------------." This is optional.</p></td></tr><tr><td><p><b>Max Archived Files</b></p></td><td colspan="2"><p>The maximum number of log files to retain. When set to an integer value, the trace listener will purge old files based on the file creation date when the number exceeds the specified value. See the note in the following <b>Remarks</b> section if you set this property.</p></td></tr><tr><td><p><b>Name</b></p></td><td colspan="2"><p>This is the name of the trace listener. The default is <b>Rolling Flat File Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>File Exists Behavior</b></p></td><td colspan="2"><p>This property determines what occurs to an existing file when it rolls over. If you select <b>Increment</b>, the application block creates a new file and names it by incrementing the timestamp. If you select <b>Overwrite </b>and do not provide a value for the <b>Timestamp Pattern</b> property, the existing file is overwritten. </p></td></tr><tr><td><p><b>Roll Interval</b></p></td><td colspan="2"><p>This property determines when the log file rolls over. You can select <b>None</b> (the default), <b>Midnight</b> (in which case the log will roll over at midnight), <b>Minute</b>, <b>Hour</b>, <b>Day</b>, <b>Month</b>, <b>Week</b>, or <b>Year</b>. This is optional.</p></td></tr><tr><td><p><b>Roll Size KB</b></p></td><td colspan="2"><p>This is the maximum size the file can reach, in kilobytes, before it rolls over. This is optional.</p></td></tr><tr><td><p><b>Timestamp Pattern</b></p></td><td colspan="2"><p>This is the date/time format that is appended to the new file name (see the Remarks section that follows this table). </p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td colspan="2"><p>Trace listeners that do not output to a text formatter use this property to determine which options, or elements, should be included in the trace output. Possible values are: <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and <b>Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table><a name="_Toc253064962" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# Remarks #
+ If you set the **Max Archived Files** property, this trace listener will delete (purge) files using the file name pattern **[**<i>file-name</i>**] *.**<i>file-extension</i>. Therefore, it will delete all log files for any trace listener that matches this pattern when it purges archived log files. To prevent this, use a value for the **File Name** property that included an additional period. For example, use **[**<i>file-name</i>**] .[**<i>additional-name</i>**].**<i>file-extension</i>.
+ You can control either the size of the file, its age, or both. For example, if you specify in configuration a **Roll Size KB** value of 5 KB and a **Roll Interval** value of Day, the file rolls when its size exceeds 5 KB and it also rolls at the end of the day.
+ If you select **Increment** for the **File Exists Behavior**, the application block creates a new file when the existing file rolls over. The file name includes the current timestamp. If a file with this name already exists, the application block adds an integer to the end of the timestamp and increments it until it cannot find a file with that name. For example, assume there is a file named **mylog2007-01-10.log** and the file rolls over while that timestamp is still valid. The Logging Application Block will then look for a file named **mylog2007-01-10.1.log**. If no such file exists, it will use that file name for the new file. If that file also exists, it will then attempt to locate the log with the next sequence number **mylog2007-01-10.2.log**. 
+ If you select **Overwrite** for the **File Exists Behavior**, the application block replaces the existing file with a new file when the current file rolls over. However, if you also set the **Timestamp Pattern** property, the application block will create a new file with the current time stamp instead of replacing the existing file. If, for some reason, it cannot overwrite the file, it will generate a name using the same process that is used with the **Increment** value.
+ Relative path names resolve to a location that is relative to the <i>AppDomain.CurrentDomain.BaseDirectory</i> directory.
<a name="trace_system" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064963" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# System Diagnostics Trace Listener #
The **TraceListener** class provides the **abstract** base class for trace listeners that monitor trace and debug output. The following table lists the properties that appear when you add a **System Diagnostics** **Trace Listener**.  
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th colspan="2"><p>Description</p></th></tr><tr><td><p><b>InitData</b></p></td><td colspan="2"><p>If supplied, this property is used when the application block constructs a trace listener. It is a string whose meaning depends on the type of trace listener being constructed. For the .NET Framework trace listeners, the string has the following values: <b>TextWriterTraceListener</b>: filename; <b>XmlWriterListener</b>: filename; <b>DelimitedLIstTraceListener</b>: filename; <b>ConsoleTraceListener</b>: not applicable; <b>DefaultTraceListener</b>: not applicable; <b>EventLogTraceListener</b>: event source name. If the <b>InitData</b> field is not specified, the block uses the default constructor. If the user specifies the <b>InitData</b> field for a trace listener that does not have a constructor overload that accepts a string, an error occurs. This is optional.</p></td></tr><tr><td><p><b>Name</b></p></td><td colspan="2"><p>The name of the trace listener. The default is <b>System Diagnostics Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>Severity Filter</b></p></td><td colspan="2"><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td colspan="2"><p>Trace listeners that do not output to a text formatter use this property to determine which options, or elements, should be included in the trace output. Possible values are: <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and<b> Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Type Name</b></p></td><td colspan="2"><p>The type of the trace listener. Select by clicking the ellipsis button (...). This opens the <b>Type Selector</b>. This is required.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table>
<div class="alert" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" src="../local/note.gif" />Note:</th></tr><tr><td>If you specify a **System Diagnostics** trace listener that writes to a file and that file is read-only, the trace listener does not write the data to the file and no exception occurs. Make sure the file attributes are set to **read/write**.</td></tr></table><p /></div><a name="traceoutputoptions" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="trace_xml" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a><a name="_Toc253064965" href="#" xmlns:xlink="http://www.w3.org/1999/xlink"><span /></a>

# XML Trace Listener #
The following table lists the properties that you can set when you add an **XML Trace Listener**.  
<table xmlns:xlink="http://www.w3.org/1999/xlink"><tr><th><p>Property</p></th><th colspan="2"><p>Description</p></th></tr><tr><td><p><b>File Name</b></p></td><td colspan="2"><p>This is the name of the file where the trace listener writes the data it extracts from an <b>XmlLogEntry</b> object. This is a required value. It can include environment variables such as %WINDIR%, %TEMP%, and %USERPROFILE%. </p></td></tr><tr><td><p><b>Severity Filter</b></p></td><td colspan="2"><p>Applies a filter that selects the level of message that it will detect. The valid values are <b>All</b> (the default), <b>Off</b>, <b>Critical</b>, <b>Error</b>, <b>Warning</b>, <b>Information</b>, <b>Verbose</b>, and <b>ActivityTracing</b>. The setting effectively means "the specified level and everything more important." For example, the <b>Warning</b> setting will detect warnings, errors, and critical events.</p></td></tr><tr><td><p><b>Name</b></p></td><td colspan="2"><p>This is the name of the trace listener. The default is <b>XML Trace Listener</b>. This is required.</p></td></tr><tr><td><p><b>Trace Output Options</b></p></td><td colspan="2"><p>Trace listeners that do not output to a text formatter use this property to determine which options, or elements, should be included in the trace output. Possible values are: <b>CallStack</b>, <b>DateTime</b>, <b>LogicalOperationStack</b>, <b>None</b>, <b>ProcessId</b>, <b>ThreadId</b>, and<b> Timestamp</b>. The default is <b>None</b>. For an explanation of these values, see <hlink xlink:type="simple" xlink:show="new" xlink:actuate="onRequest" xlink:href="e0902ea8-47a8-465f-a7d4-6809f35f6bc8.html">TraceOutputOptions Values</hlink>. This is optional.</p></td></tr><tr><td><p><b>Asynchronous</b></p></td><td><p>A flag that indicates if the listener should log events asynchronously. The default is <b>false</b>.</p></td></tr><tr><td><p><b>Buffer size (asynchronous)</b></p></td><td><p>Specifies the buffer size for asynchronous logging. If the buffer overflows, events will be lost. The default value is 30,000.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Degree of parallelism (asynchronous)</b></p></td><td><p>Specifies the maximum degree of parallelism for processing asynchronous requests for thread safe listeners. If left blank the current core count is used.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr><tr><td><p><b>Dispose Timeout (asynchronous)</b></p></td><td><p>Specifies how long to wait for the asynchronous listener to finish processing buffered requests. The value is expressed as a timespan (for example ten seconds is entered as 00:00:10). You can express an infinite timeout by using <b>infinite</b>. The default value is <b>infinite</b>.</p><p>Note: this property is used only if the <b>Asynchronous</b> flag is set to <b>True</b>.</p></td></tr></table>
